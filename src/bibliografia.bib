
@techreport{istat.internet-usage,
  type        = {Report/{{Study}}},
  title       = {Report {Cittadini} {E} {ICT}},
  url         = {https://www.istat.it/wp-content/uploads/2025/04/REPORT_CITTADINI-E-ICT_2024.pdf},
  institution = {Istat},
  urldate     = {2025-04-28},
  author      = {Zannella, Laura and Zanella, Marina and Rizzo, Marco},
  pages       = {2--2},
  year        = {2025}
}

@techreport{clusit.italy-malware,
  title       = {© {Clusit} - {Rapporto} 2025 sulla {Cybersecurity} in {Italia} e nel mondo},
  url         = {https://clusit.it/wp-content/uploads/download/Rapporto_Clusit_03-2025_web.pdf},
  institution = {Clusit},
  author      = {, Clusit},
  month       = mar,
  year        = {2025},
  pages       = {9--10}
}

@article{idika2007survey,
  title   = {A survey of malware detection techniques},
  author  = {Idika, Nwokedi and Mathur, Aditya P},
  journal = {Purdue University},
  volume  = {48},
  number  = {2},
  pages   = {32--46},
  year    = {2007},
  url     = {https://profsandhu.com/cs5323_s17/im_2007.pdf}
}

@article{doi:10.1155/2015/659101,
  author   = {Youngjoon Ki and Eunjin Kim and Huy Kang Kim},
  title    = {A Novel Approach to Detect Malware Based on API Call Sequence Analysis},
  journal  = {International Journal of Distributed Sensor Networks},
  volume   = {11},
  number   = {6},
  pages    = {659101},
  year     = {2015},
  doi      = {10.1155/2015/659101},
  url      = { 
              
              https://doi.org/10.1155/2015/659101
              
              
              
              },
  eprint   = { 
              
              https://doi.org/10.1155/2015/659101
              
              
              
              },
  abstract = { In the era of ubiquitous sensors and smart devices, detecting malware is becoming an endless battle between ever-evolving malware and antivirus programs that need to process ever-increasing security related data. For malware detection, various approaches have been proposed. Among them, dynamic analysis is known to be effective in terms of providing behavioral information. As malware authors increasingly use obfuscation techniques, it becomes more important to monitor how malware behaves for its detection. In this paper, we propose a novel approach for dynamic analysis of malware. We adopt DNA sequence alignment algorithms and extract common API call sequence patterns of malicious function from malware in different categories. We find that certain malicious functions are commonly included in malware even in different categories. From checking the existence of certain functions or API call sequence patterns matched, we can even detect new unknown malware. The result of our experiment shows high enough F-measure and accuracy. API call sequence can be extracted from most of the modern devices; therefore, we believe that our method can detect the malware for all types of the ubiquitous devices. }
}

@inproceedings{6680850,
  author    = {Qiao, Yong and Yang, Yuexiang and Ji, Lin and He, Jie},
  booktitle = {2013 12th IEEE International Conference on Trust, Security and Privacy in Computing and Communications},
  title     = {Analyzing Malware by Abstracting the Frequent Itemsets in API Call Sequences},
  year      = {2013},
  volume    = {},
  number    = {},
  pages     = {265-270},
  abstract  = {Analyzing the usage of Windows Application Program Interface (API) is a common way to understand behaviors of Malicious Software (malware) in either static analysis or dynamic analysis methods. In this work, we focus on the usage of frequent messages in API call sequences, and we hypothesize that frequent itemsets composed of API names and/or API arguments could be valuable in the identification of the behavior of malware. For verification, we introduced clustering processes of malware binaries based on their frequent itemsets of API call sequences, and we evaluated the performance of malware clustering. Specific implementation processes for malware clustering, including API calls abstraction, frequent itemsets mining and similarity calculation, are illustrated. The experiment upon a big malware dataset demonstrated that merely using the frequent messages of API call sequences can achieve a high precision for malware clustering while significantly reducing the computation time. This also proves the importance of frequent itemsets in API call sequences for identifying the behavior of malware.},
  keywords  = {Malware;Itemsets;Abstracts;Monitoring;Algorithm design and analysis;Educational institutions;Data mining;malware;frequent-itemsets;API call sequences;clustering;Sandbox},
  doi       = {10.1109/TrustCom.2013.36},
  issn      = {2324-9013},
  month     = {July},
  url       = {https://ieeexplore.ieee.org/abstract/document/6680850}
}

@misc{Microsoft-PE,
  title     = {Formato Pe - Win32 apps},
  url       = {https://learn.microsoft.com/it-it/windows/win32/debug/pe-format},
  journal   = {Win32 apps | Microsoft Learn},
  publisher = {Microsoft},
  author    = {Microsoft}
}

@misc{Microsoft-DLL,
  title     = {Libreria Di Collegamento Dinamico},
  url       = {https://learn.microsoft.com/it-it/troubleshoot/windows-client/setup-upgrade-and-drivers/dynamic-link-library},
  journal   = {Libreria Di Collegamento Dinamico | Microsoft Learn},
  publisher = {Microsoft},
  author    = {Microsoft}
}

@misc{Cisco-Malware_Taxonomy,
  title     = {What is a malware},
  url       = {https://www.cisco.com/site/us/en/learn/topics/security/what-is-malware.html},
  journal   = {Libreria Di Collegamento Dinamico | Microsoft Learn},
  publisher = {Cisco},
  author    = {Cisco}
}

@misc{Kaspersky-malware_dropper,
  title     = {Trojan droppers},
  url       = {https://encyclopedia.kaspersky.com/glossary/trojan-droppers/},
  journal   = {Kaspersky IT Encyclopedia},
  author    = {Kaspersky},
  publisher = {Kaspersky}
}

@misc{Kaspersky-malware_backdoor,
  title     = {Trojan droppers},
  url       = {https://encyclopedia.kaspersky.com/glossary/backdoor/},
  journal   = {Kaspersky IT Encyclopedia},
  author    = {Kaspersky},
  publisher = {Kaspersky}
}

@misc{Kaspersky-malware_MultiPacked,
  title     = {MultiPacked},
  url       = {https://encyclopedia.kaspersky.com/knowledge/multipacked/},
  journal   = {Kaspersky IT Encyclopedia},
  author    = {Kaspersky},
  publisher = {Kaspersky}
}

@misc{Microsoft-api,
  publisher = {Microsoft},
  author    = {Microsoft},
  title     = {Indice di API Windows - Win32 apps},
  url       = {https://learn.microsoft.com/it-it/windows/win32/apiindex/windows-api-list}
}

@misc{Microsoft-GetKeyboardState,
  publisher = {Microsoft},
  author    = {Microsoft},
  title     = {GetKeyboardState - Win32 apps},
  url       = {https://learn.microsoft.com/it-it/windows/win32/api/winuser/nf-winuser-getkeyboardstate}
}

@misc{Microsoft-API-def,
  author = {Microsoft},
  title  = {{Introduction to APIs}},
  url    = {https://learn.microsoft.com/en-us/xandr/industry-reference/intro-to-apis}
}

@inproceedings{heath1993kdt,
  author    = {Heath, David and Kasif, Simon and Salzberg, Steven},
  title     = {k-DT: A Multi-Tree Learning Method},
  booktitle = {Proceedings of the Second International Workshop on Multistrategy Learning},
  year      = {1993},
  pages     = {138--149}
}

@online{xgboost_story,
  author  = {Chen, Tianqi},
  title   = {XGBoost: A Scalable Tree Boosting System},
  year    = {2016},
  url     = {https://web.archive.org/web/20160817055008/http://arxiv.org/abs/1603.02754},
  urldate = {2016-08-01},
  note    = {Archived on 2016-08-07}
}

 @book{christodorescu_jha_2003,
  title     = {Static Analysis of Executables to Detect Malicious Patterns *},
  url       = {https://pages.cs.wisc.edu/~jha/jha-papers/security/usenix_2003.pdf},
  author    = {Christodorescu, Mihai and Jha, Somesh},
  year      = {2003},
  pages     = {169-186},
  publisher = {USENIX Association}
}

@book{Cesare2012-it,
  title     = {Software similarity and classification},
  author    = {Cesare, Silvio and Xiang, Yang},
  publisher = {Springer},
  edition   = 2012,
  year      = 2012,
  address   = {Guildford, England},
  language  = {en}
}

@misc{Detours,
  title    = {Detours: Detours is a software package for monitoring and
              instrumenting {API} calls on Windows. It is distributed in source
              code form},
  language = {en},
  url      = {https://github.com/microsoft/Detours}
}

@misc{wtrace_net_2023,
  title        = {Using withdll and Detours to trace Win API calls},
  author       = {{wtrace.net}},
  year         = {2023},
  month        = nov,
  howpublished = {\url{https://wtrace.net/guides/using-withdll-and-detours-to-trace-winapi/}},
  note         = {Accessed: 2025-09-20},
  language     = {en}
}

@misc{DynamoRIO_2025,
  title        = {DynamoRIO: Dynamic Binary Instrumentation Tool},
  author       = {{DynamoRIO Project}},
  year         = {2025},
  howpublished = {\url{https://dynamorio.org/}},
  note         = {Accessed: 2025-09-20}
}

@misc{ibm_machine_learning_2025,
  title    = {Che cos'è il machine learning (ML)?},
  url      = {https://www.ibm.com/it-it/think/topics/machine-learning},
  journal  = {IBM.com},
  year     = {2025},
  month    = mar,
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{IBM}}
}

@misc{google_ml_intro,
  title    = {Che cos'è il machine learning?},
  url      = {https://developers.google.com/machine-learning/intro-to-ml/what-is-ml?hl=it},
  journal  = {Google for Developers},
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{Google}}
}

@misc{google_ml_glossary_modello,
  title    = {Glossario del machine learning},
  url      = {https://developers.google.com/machine-learning/glossary?hl=it#model},
  journal  = {Google for Developers},
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{Google}}
}

@misc{google_ml_glossary_allenamento,
  title    = {Glossario del machine learning},
  url      = {https://developers.google.com/machine-learning/glossary?hl=it#training},
  journal  = {Google for Developers},
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{Google}}
}

@misc{google_ml_glossary_esempio,
  title    = {Glossario del machine learning},
  url      = {https://developers.google.com/machine-learning/glossary?hl=it#example},
  journal  = {Google for Developers},
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{Google}}
}

@misc{google_ml_glossary_caratteristica,
  title    = {Glossario del machine learning},
  url      = {https://developers.google.com/machine-learning/glossary?hl=it#feature},
  journal  = {Google for Developers},
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{Google}}
}

@misc{google_ml_glossary_etichetta,
  title    = {Glossario del machine learning},
  url      = {https://developers.google.com/machine-learning/glossary?hl=it#class},
  journal  = {Google for Developers},
  language = {it},
  note     = {Accessed: 2025-09-21},
  author   = {{Google}}
}

@misc{Belcic_2025,
  author   = {Belcic, Ivan},
  title    = {What is Classification in Machine Learning?},
  year     = {2025},
  month    = sep,
  url      = {https://www.ibm.com/think/topics/classification-machine-learning},
  journal  = {IBM.com},
  language = {en}
}

@misc{Mucci_2025,
  title    = {Cosa sono l'overfitting e l'underfitting?},
  url      = {https://www.ibm.com/it-it/think/topics/overfitting-vs-underfitting},
  journal  = {IBM.com},
  author   = {Mucci, Tim},
  year     = {2025},
  month    = mar,
  language = {it}
}

@misc{Bagging_2025,
  title    = {Cos'è il bagging?},
  url      = {https://www.ibm.com/it-it/think/topics/bagging},
  journal  = {IBM.com},
  year     = {2025},
  month    = jun,
  language = {it}
}

@misc{Alberi_decisionali,
  title    = {Alberi decisionali (Decision Trees)},
  url      = {https://developers.google.com/machine-learning/decision-forests/decision-trees?hl=it},
  journal  = {Google for Developers},
  language = {it}
}

@misc{CheCosEForestaCasuale_2025,
  title    = {Che cos'è la foresta casuale},
  url      = {https://www.ibm.com/it-it/think/topics/random-forest},
  journal  = {Ibm.com},
  year     = {2025},
  month    = feb,
  language = {it}
}

@misc{CheCoseBoosting_2024,
  title    = {Che cos'è il boosting},
  url      = {https://www.ibm.com/it-it/topics/boosting},
  journal  = {Ibm.com},
  year     = {2024},
  month    = nov,
  language = {it}
}

@misc{GradientDescent_2025,
  title    = {Che cos'è la discesa del gradiente?},
  url      = {https://www.ibm.com/it-it/think/topics/gradient-descent},
  journal  = {IBM.com},
  year     = {2025},
  month    = jan,
  language = {it}
}

@misc{KavlakogluRussi_2025,
  title    = {Che cos'è XGBoost?},
  url      = {https://www.ibm.com/it-it/think/topics/xgboost},
  journal  = {Ibm.com},
  author   = {Kavlakoglu, Eda and Russi, Erika},
  year     = {2025},
  month    = jan,
  language = {it}
}

@misc{MurelKavlakoglu_2025,
  title    = {Che cos'è una matrice di confusione?},
  url      = {https://www.ibm.com/it-it/think/topics/confusion-matrix},
  journal  = {IBM.com},
  author   = {Murel, Jacob and Kavlakoglu, Eda},
  year     = {2025},
  month    = feb,
  language = {it}
}

@article{Amer_Zelinka_2020,
  title    = {A dynamic Windows malware detection and prediction method based on contextual understanding of API call sequence},
  author   = {Amer, Eslam and Zelinka, Ivan},
  journal  = {Computers \& Security},
  volume   = {92},
  pages    = {101760},
  year     = {2020},
  number   = {101760},
  doi      = {10.1016/j.cose.2020.101760},
  url      = {http://dx.doi.org/10.1016/j.cose.2020.101760},
  language = {en},
  issn     = {0167-4048}
}

@article{Gond_Mohapatra_2025,
  title    = {Deep Learning-Driven Malware Classification with API Call Sequence Analysis and Concept Drift Handling},
  author   = {Gond, Bishwajit Prasad and Mohapatra, D.},
  journal  = {arXiv},
  volume   = {abs/2502.08679},
  year     = {2025},
  url      = {https://arxiv.org/abs/2502.08679},
  doi      = {10.48550/arXiv.2502.08679},
  language = {en}
}




@article{KiKim_2015,
  author   = {Youngjoon Ki and Eunjin Kim and Huy Kang Kim},
  title    = {A Novel Approach to Detect Malware Based on API Call Sequence Analysis},
  journal  = {International Journal of Distributed Sensor Networks},
  volume   = {11},
  number   = {6},
  pages    = {659101},
  year     = {2015},
  doi      = {10.1155/2015/659101},
  url      = {https://doi.org/10.1155/2015/659101},
  abstract = {In the era of ubiquitous sensors and smart devices, detecting malware is 
              becoming an endless battle between ever-evolving malware and antivirus 
              programs that need to process ever-increasing security related data. 
              For malware detection, various approaches have been proposed. Among 
              them, dynamic analysis is known to be effective in terms of providing 
              behavioral information. As malware authors increasingly use obfuscation 
              techniques, it becomes more important to monitor how malware behaves 
              for its detection. In this paper, we propose a novel approach for dynamic 
              analysis of malware. We adopt DNA sequence alignment algorithms and 
              extract common API call sequence patterns of malicious function from 
              malware in different categories. We find that certain malicious functions 
              are commonly included in malware even in different categories. From 
              checking the existence of certain functions or API call sequence patterns 
              matched, we can even detect new unknown malware. The result of our 
              experiment shows high enough F-measure and accuracy. API call sequence 
              can be extracted from most of the modern devices; therefore, we believe 
              that our method can detect the malware for all types of the ubiquitous devices.}
}

@article{smith1981identification,
  title     = {Identification of common molecular subsequences},
  author    = {Smith, Temple F and Waterman, Michael S and others},
  journal   = {Journal of molecular biology},
  volume    = {147},
  number    = {1},
  pages     = {195--197},
  year      = {1981},
  publisher = {Elsevier Science}
}

@inproceedings{savenko2019dynamic,
  title        = {Dynamic Signature-based Malware Detection Technique Based on API Call Tracing},
  author       = {Savenko, Oleg and Nicheporuk, Andrii and Hurman, Ivan and Lysenko, Sergii},
  booktitle    = {Proceedings of the 9th International Conference on Information Technology and Management (ICITM 2019)},
  pages        = {633--643},
  year         = {2019},
  organization = {CEUR Workshop Proceedings},
  url          = {https://ceur-ws.org/Vol-2393/paper_278.pdf}
}

@inproceedings{9036219,
  author    = {Garg, Vidhi and Yadav, Rajesh Kumar},
  booktitle = {2019 4th International Conference on Information Systems and Computer Networks (ISCON)},
  title     = {Malware Detection based on API Calls Frequency},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {400-404},
  keywords  = {Malware;Feature extraction;Machine learning;Support vector machines;Computer security;Radio frequency;Supervised learning;Machine Learning;Malware Analysis;Signature-based detection;Anomaly-based detection;Supervised Learning},
  doi       = {10.1109/ISCON47742.2019.9036219},
  url       = {https://ieeexplore.ieee.org/abstract/document/9036219/authors#authors}
}

@misc{What_is_support_vector_machine_2025,
  title    = {What is support vector machine?},
  url      = {https://www.ibm.com/think/topics/support-vector-machine},
  journal  = {Ibm.com},
  author   = {{IBM}},
  year     = {2025},
  month    = {June},
  language = {en}
}

@misc{Wikipedia_Word2vec,
  title   = {Word2vec},
  url     = {https://it.wikipedia.org/w/index.php?title=Word2vec&oldid=145522864},
  journal = {Wikipedia, The Free Encyclopedia},
  author  = {Wikipedia contributors},
  note    = {Data di consultazione: 25 settembre 2025}
}

@online{Stryker_Holdsworth_2025,
  author    = {Stryker, Cole and Holdsworth, Jim},
  title     = {Cos’è l’NLP (elaborazione del linguaggio naturale)?},
  url       = {https://www.ibm.com/it-it/think/topics/natural-language-processing},
  note      = {Data di consultazione: 25 settembre 2025},
  year      = {2025},
  language  = {it},
  publisher = {Ibm.com}
}

@online{Kavlakoglu_Winland_2025,
  author    = {Kavlakoglu, Eda and Winland, Vanna},
  title     = {Cos’è il k-means clustering?},
  url       = {https://www.ibm.com/it-it/think/topics/k-means-clustering},
  year      = {2025},
  month     = {feb},
  language  = {it},
  publisher = {Ibm.com},
  note      = {Data di consultazione: 25 settembre 2025}
}

@misc{Wikipedia_Ngramma,
  author       = {{Wikipedia contributors}},
  title        = {N-gramma},
  year         = {2024},
  howpublished = {\url{https://it.wikipedia.org/w/index.php?title=N-gramma&oldid=140364382}},
  note         = {Wikipedia, The Free Encyclopedia},
  language     = {it}
}

@misc{IBM_CNN_2025,
  author       = {{IBM}},
  title        = {What are Convolutional Neural Networks?},
  year         = {2025},
  month        = sep,
  howpublished = {\url{https://www.ibm.com/think/topics/convolutional-neural-networks}},
  note         = {IBM.com},
  language     = {en}
}

@article{10.1371/journal.pone.0299706,
  doi       = {10.1371/journal.pone.0299706},
  author    = {Ma, Cuihua AND Li, Zhenwan AND Long, Haixia AND Bilal, Anas AND Liu, Xiaowen},
  journal   = {PLOS ONE},
  publisher = {Public Library of Science},
  title     = {A malware classification method based on directed API call relationships},
  year      = {2025},
  month     = {03},
  volume    = {20},
  url       = {https://doi.org/10.1371/journal.pone.0299706},
  pages     = {1-26},
  abstract  = {In response to the growing complexity of network threats, researchers are increasingly turning to machine learning and deep learning techniques to develop advanced models for malware detection. Many existing methods that utilize Application Programming Interface (API) sequence instructions for malware classification often overlook the structural information inherent in these sequences. While some approaches consider the structure of API calls, they typically rely on the Graph Convolutional Network (GCN) framework, which tends to neglect the sequential nature of API interactions. To address these limitations, we propose a novel malware classification method that leverages the directed relationships within API sequences. Our approach models each API sequence as a directed graph, incorporating node attributes, structural information, and directional relationships. To effectively capture these features, we introduce First-order and Second-order Graph Convolutional Networks (FSGCN) to approximate the operations of a directed graph convolutional network (DGCN). The resulting directed graph embeddings from the FSGCN are then transformed into grayscale images and classified using a Convolutional Neural Network (CNN). Additionally, to mitigate the effects of imbalanced datasets, we employ the Synthetic Minority Over-sampling Technique (SMOTE), ensuring that underrepresented classes receive adequate attention during training. Our method has been rigorously evaluated through extensive experiments on two real-world malware datasets. The results demonstrate the effectiveness and superiority of our approach compared to traditional and graph-based malware classification techniques.},
  number    = {3}
}

@techreport{Shafranovich_2005,
  title       = {Common Format and MIME Type for Comma-Separated Values (CSV) Files},
  author      = {Shafranovich, Y.},
  year        = {2005},
  institution = {Internet Engineering Task Force (IETF)},
  type        = {RFC},
  number      = {4180},
  url         = {https://www.rfc-editor.org/rfc/rfc4180},
  issn        = {2070-1721}
}

@misc{Wikipedia_contributors_2025,
  author       = {{Wikipedia contributors}},
  title        = {Bag-of-words model},
  year         = {2025},
  month        = may,
  howpublished = {\url{https://en.wikipedia.org/w/index.php?title=Bag-of-words_model&oldid=1289978794}},
  note         = {Accessed: 2025-09-26},
  journal      = {Wikipedia, The Free Encyclopedia}
}

@misc{scikit-learn,
  title        = {Scikit-learn: Machine Learning in Python},
  author       = {{Scikit-learn developers}},
  year         = {2025},
  howpublished = {\url{https://scikit-learn.org/stable/index.html}},
  note         = {Accessed: 2025-09-26},
  language     = {en}
}

@misc{Wikipedia_campionamento_stratificato,
  author  = {{Wikipedia contributors}},
  title   = {Campionamento stratificato},
  url     = {https://it.wikipedia.org/w/index.php?title=Campionamento_stratificato&oldid=141667417},
  journal = {Wikipedia, The Free Encyclopedia},
  year    = {2025},
  note    = {Ultimo accesso: 26 settembre 2025}
}

@book{Bray_2017,
  author    = {Bray, Tim},
  editor    = {Bray, Tim},
  title     = {The JavaScript Object Notation (JSON) Data Interchange Format},
  year      = {2017},
  publisher = {RFC Editor},
  isbn      = {2070-1721}
}

@misc{oop,
  title     = {Programmazione Object-Oriented in C\#},
  author    = {Wagner, Bill},
  year      = {2023},
  url       = {https://learn.microsoft.com/it-it/dotnet/csharp/fundamentals/tutorials/oop},
  note      = {Accessed: 2025-09-26},
  publisher = {Microsoft Learn},
  language  = {it}
}

@misc{ibm_uml,
  author   = {{IBM Developer}},
  title    = {The Class Diagram},
  url      = {https://developer.ibm.com/articles/the-class-diagram/},
  journal  = {IBM.com},
  year     = {2023},
  note     = {Accessed: 2025-09-27},
  language = {en}
}

@misc{Gaudio_2025,
  author       = {Giacomo Gaudio},
  title        = {ACPAMC: API Call Pattern Analysis for Malware Classification},
  year         = {2025},
  howpublished = {\url{https://github.com/ThePino/ACPAMC}},
  note         = {Repository GitHub},
  language     = {en}
}

@article{Ki_2015,
  author   = {Youngjoon Ki and Eunjin Kim and Huy Kang Kim},
  title    = {A Novel Approach to Detect Malware Based on API Call Sequence Analysis},
  journal  = {International Journal of Distributed Sensor Networks},
  volume   = {2015},
  pages    = {Article ID 659101, 9 pages},
  year     = {2015},
  doi      = {10.1155/2015/659101},
  url      = {https://ocslab.hksecurity.net/apimds-dataset},
  language = {en}
}

@article{10.7717/peerj-cs.346,
  title    = {Data augmentation based malware detection using convolutional neural networks},
  author   = {Catak, Ferhat Ozgur and Ahmed, Javed and Sahinbas, Kevser and Khand, Zahid Hussain},
  year     = 2021,
  month    = jan,
  keywords = {Convolutional neural networks, Cybersecurity, Image augmentation, Malware analysis},
  volume   = 7,
  pages    = {e346},
  journal  = {PeerJ Computer Science},
  issn     = {2376-5992},
  url      = {https://doi.org/10.7717/peerj-cs.346},
  doi      = {10.7717/peerj-cs.346}
}

@misc{ocatak_malware_api_class,
  title    = {malware\_api\_class: Malware Dataset for Security Researchers and Data Scientists},
  author   = {Catak, F. Ozgur},
  year     = {2020},
  url      = {https://github.com/ocatak/malware_api_class/tree/master},
  note     = {Public malware dataset generated by Cuckoo Sandbox based on Windows OS API call analysis for cybersecurity research},
  language = {en}
}


@article{maniriho2023api,
  title     = {API-MalDetect: Automated malware detection framework for windows based on API calls and deep learning techniques},
  author    = {Maniriho, Pascal and Mahmood, Abdun Naser and Chowdhury, Mohammad Jabed Morshed},
  journal   = {Journal of Network and Computer Applications},
  pages     = {103704},
  year      = {2023},
  publisher = {Elsevier}
}

@misc{maniriho2023malbehavd,
  title    = {MalbehavD-V1: Public Dataset of Malware and Benign Executable Files (Windows EXE Files)},
  author   = {Maniriho, Pascal and Mahmood, Abdun Naser and Chowdhury, Mohammad Jabed Morshed},
  year     = {2023},
  url      = {https://github.com/mpasco/MalbehavD-V1/tree/main},
  note     = {Dataset for cybersecurity research, suitable for training and testing machine learning and deep learning algorithms},
  language = {en}
}

@inproceedings{10.1145/3560830.3563726,
  author    = {Trizna, Dmitrijs},
  title     = {Quo Vadis: Hybrid Machine Learning Meta-Model Based on Contextual and Behavioral Malware Representations},
  year      = {2022},
  isbn      = {9781450398800},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3560830.3563726},
  doi       = {10.1145/3560830.3563726},
  booktitle = {Proceedings of the 15th ACM Workshop on Artificial Intelligence and Security},
  pages     = {127–136},
  numpages  = {10},
  keywords  = {reverse engineering, neural networks, malware, emulation, convolutions},
  location  = {Los Angeles, CA, USA},
  series    = {AISec'22}
}

@misc{trizna_quovadis,
  title    = {quo.vadis: Hybrid Machine Learning Model for Malware Detection Based on Windows Kernel Emulation},
  author   = {Trizna, Dmitrijs},
  year     = {2022},
  url      = {https://github.com/dtrizna/quo.vadis/tree/main},
  note     = {Hybrid machine learning model for malware detection based on Windows kernel emulation},
  language = {en}
}
